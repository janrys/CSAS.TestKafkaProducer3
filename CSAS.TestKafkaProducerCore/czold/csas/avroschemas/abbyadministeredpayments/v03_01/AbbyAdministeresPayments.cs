// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.10.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace cz.csas.avroschemas.abbyadministeredpayments.v03_01
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class AbbyAdministeresPayments : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"AbbyAdministeresPayments\",\"namespace\":\"cz.csas.avroschem" +
				"as.abbyadministeredpayments.v03_01\",\"fields\":[{\"name\":\"account\",\"default\":null,\"" +
				"type\":[\"null\",{\"type\":\"record\",\"name\":\"Account\",\"namespace\":\"cz.csas.avroschemas" +
				".abbyadministeredpayments.v03_01\",\"fields\":[{\"name\":\"accountNumber\",\"doc\":\"Bank " +
				"Account Number\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"accountPrefix\"" +
				",\"doc\":\"Bank Account Number Prefix\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"n" +
				"ame\":\"bankCode\",\"doc\":\"Bank Code\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"nam" +
				"e\":\"iban\",\"default\":null,\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"claimId\",\"doc\":\"" +
				"ID naroku v CTS\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"definitionId\"" +
				",\"doc\":\"ID definice v CTS\",\"type\":\"string\"},{\"name\":\"email\",\"doc\":\"emailova adre" +
				"sa\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"forename\",\"doc\":\"(krestni)" +
				" jmeno\",\"type\":\"string\"},{\"name\":\"l1_recipient\",\"doc\":\"Adresni radek 1 Prijmeni," +
				" Jmeno, Titul pred, Titul za\\r\\n\\r\\nPouziti formatovane adresy je popsano primo " +
				"v entite PostalAddress.\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"l2_su" +
				"pplement\",\"doc\":\"Adresni radek 2, Doplnek\\r\\n\\r\\nPouziti formatovane adresy je p" +
				"opsano primo v entite PostalAddress.\",\"default\":null,\"type\":[\"null\",\"string\"]},{" +
				"\"name\":\"l3_street\",\"doc\":\"Adresni radek 3, Ulice (nebo Cast obce, kdyz je pole U" +
				"lice prazdne), „Cislo popisne/orientacni“ nebo „Cislo evidencni\\r\\n\\r\\nPouziti f" +
				"ormatovane adresy je popsano primo v entite PostalAddress.\",\"default\":null,\"type" +
				"\":[\"null\",\"string\"]},{\"name\":\"l4_city\",\"doc\":\"Adresni radek 4, Obec/Cast Obce\\r\\" +
				"n\\r\\nPouziti formatovane adresy je popsano primo v entite PostalAddress.\",\"defau" +
				"lt\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"l5_zipcode\",\"doc\":\"Adresni radek 5, " +
				"PSC, Posta\\r\\n\\r\\nPouziti formatovane adresy je popsano primo v entite PostalAdd" +
				"ress.\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"l6_country\",\"doc\":\"Adre" +
				"sni radek 6, Stat. Pokud je to CR, pole se nevraci.\\r\\n\\r\\nPouziti formatovane a" +
				"dresy je popsano primo v entite PostalAddress.\",\"default\":null,\"type\":[\"null\",\"s" +
				"tring\"]},{\"name\":\"personalId\",\"doc\":\"Pro ceske obcany to je rodne cislo. Pro ciz" +
				"ince cislo odvozene od datumu narozani (jak rc) a posledne 4 cislice jsou devitk" +
				"y. Proto cizinci narozeni v jednom dni je maji rovnake.\",\"default\":null,\"type\":[" +
				"\"null\",\"string\"]},{\"name\":\"registrationNumber\",\"doc\":\"IC.\",\"default\":null,\"type\"" +
				":[\"null\",\"string\"]},{\"name\":\"surname\",\"doc\":\"prijmeni\",\"type\":\"string\"},{\"name\":" +
				"\"taxResidency\",\"default\":null,\"type\":[\"null\",\"string\"]}]}");
		private cz.csas.avroschemas.abbyadministeredpayments.v03_01.Account _account;
		/// <summary>
		/// ID naroku v CTS
		/// </summary>
		private string _claimId;
		/// <summary>
		/// ID definice v CTS
		/// </summary>
		private string _definitionId;
		/// <summary>
		/// emailova adresa
		/// </summary>
		private string _email;
		/// <summary>
		/// (krestni) jmeno
		/// </summary>
		private string _forename;
		/// <summary>
		/// Adresni radek 1 Prijmeni, Jmeno, Titul pred, Titul za
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		private string _l1_recipient;
		/// <summary>
		/// Adresni radek 2, Doplnek
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		private string _l2_supplement;
		/// <summary>
		/// Adresni radek 3, Ulice (nebo Cast obce, kdyz je pole Ulice prazdne), „Cislo popisne/orientacni“ nebo „Cislo evidencni
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		private string _l3_street;
		/// <summary>
		/// Adresni radek 4, Obec/Cast Obce
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		private string _l4_city;
		/// <summary>
		/// Adresni radek 5, PSC, Posta
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		private string _l5_zipcode;
		/// <summary>
		/// Adresni radek 6, Stat. Pokud je to CR, pole se nevraci.
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		private string _l6_country;
		/// <summary>
		/// Pro ceske obcany to je rodne cislo. Pro cizince cislo odvozene od datumu narozani (jak rc) a posledne 4 cislice jsou devitky. Proto cizinci narozeni v jednom dni je maji rovnake.
		/// </summary>
		private string _personalId;
		/// <summary>
		/// IC.
		/// </summary>
		private string _registrationNumber;
		/// <summary>
		/// prijmeni
		/// </summary>
		private string _surname;
		private string _taxResidency;
		public virtual Schema Schema
		{
			get
			{
				return AbbyAdministeresPayments._SCHEMA;
			}
		}
		public cz.csas.avroschemas.abbyadministeredpayments.v03_01.Account account
		{
			get
			{
				return this._account;
			}
			set
			{
				this._account = value;
			}
		}
		/// <summary>
		/// ID naroku v CTS
		/// </summary>
		public string claimId
		{
			get
			{
				return this._claimId;
			}
			set
			{
				this._claimId = value;
			}
		}
		/// <summary>
		/// ID definice v CTS
		/// </summary>
		public string definitionId
		{
			get
			{
				return this._definitionId;
			}
			set
			{
				this._definitionId = value;
			}
		}
		/// <summary>
		/// emailova adresa
		/// </summary>
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				this._email = value;
			}
		}
		/// <summary>
		/// (krestni) jmeno
		/// </summary>
		public string forename
		{
			get
			{
				return this._forename;
			}
			set
			{
				this._forename = value;
			}
		}
		/// <summary>
		/// Adresni radek 1 Prijmeni, Jmeno, Titul pred, Titul za
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		public string l1_recipient
		{
			get
			{
				return this._l1_recipient;
			}
			set
			{
				this._l1_recipient = value;
			}
		}
		/// <summary>
		/// Adresni radek 2, Doplnek
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		public string l2_supplement
		{
			get
			{
				return this._l2_supplement;
			}
			set
			{
				this._l2_supplement = value;
			}
		}
		/// <summary>
		/// Adresni radek 3, Ulice (nebo Cast obce, kdyz je pole Ulice prazdne), „Cislo popisne/orientacni“ nebo „Cislo evidencni
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		public string l3_street
		{
			get
			{
				return this._l3_street;
			}
			set
			{
				this._l3_street = value;
			}
		}
		/// <summary>
		/// Adresni radek 4, Obec/Cast Obce
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		public string l4_city
		{
			get
			{
				return this._l4_city;
			}
			set
			{
				this._l4_city = value;
			}
		}
		/// <summary>
		/// Adresni radek 5, PSC, Posta
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		public string l5_zipcode
		{
			get
			{
				return this._l5_zipcode;
			}
			set
			{
				this._l5_zipcode = value;
			}
		}
		/// <summary>
		/// Adresni radek 6, Stat. Pokud je to CR, pole se nevraci.
		///
		///Pouziti formatovane adresy je popsano primo v entite PostalAddress.
		/// </summary>
		public string l6_country
		{
			get
			{
				return this._l6_country;
			}
			set
			{
				this._l6_country = value;
			}
		}
		/// <summary>
		/// Pro ceske obcany to je rodne cislo. Pro cizince cislo odvozene od datumu narozani (jak rc) a posledne 4 cislice jsou devitky. Proto cizinci narozeni v jednom dni je maji rovnake.
		/// </summary>
		public string personalId
		{
			get
			{
				return this._personalId;
			}
			set
			{
				this._personalId = value;
			}
		}
		/// <summary>
		/// IC.
		/// </summary>
		public string registrationNumber
		{
			get
			{
				return this._registrationNumber;
			}
			set
			{
				this._registrationNumber = value;
			}
		}
		/// <summary>
		/// prijmeni
		/// </summary>
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				this._surname = value;
			}
		}
		public string taxResidency
		{
			get
			{
				return this._taxResidency;
			}
			set
			{
				this._taxResidency = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.account;
			case 1: return this.claimId;
			case 2: return this.definitionId;
			case 3: return this.email;
			case 4: return this.forename;
			case 5: return this.l1_recipient;
			case 6: return this.l2_supplement;
			case 7: return this.l3_street;
			case 8: return this.l4_city;
			case 9: return this.l5_zipcode;
			case 10: return this.l6_country;
			case 11: return this.personalId;
			case 12: return this.registrationNumber;
			case 13: return this.surname;
			case 14: return this.taxResidency;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.account = (cz.csas.avroschemas.abbyadministeredpayments.v03_01.Account)fieldValue; break;
			case 1: this.claimId = (System.String)fieldValue; break;
			case 2: this.definitionId = (System.String)fieldValue; break;
			case 3: this.email = (System.String)fieldValue; break;
			case 4: this.forename = (System.String)fieldValue; break;
			case 5: this.l1_recipient = (System.String)fieldValue; break;
			case 6: this.l2_supplement = (System.String)fieldValue; break;
			case 7: this.l3_street = (System.String)fieldValue; break;
			case 8: this.l4_city = (System.String)fieldValue; break;
			case 9: this.l5_zipcode = (System.String)fieldValue; break;
			case 10: this.l6_country = (System.String)fieldValue; break;
			case 11: this.personalId = (System.String)fieldValue; break;
			case 12: this.registrationNumber = (System.String)fieldValue; break;
			case 13: this.surname = (System.String)fieldValue; break;
			case 14: this.taxResidency = (System.String)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
