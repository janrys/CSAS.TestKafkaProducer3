// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace cz.csas.avroschemas.administeredpayment_processpayment.v03_01
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class Person : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""Person"",""namespace"":""cz.csas.avroschemas.administeredpayment_processpayment.v03_01"",""fields"":[{""name"":""additionalDegree"",""doc"":""Additional academic degree. (Titul za jmenem.)"",""default"":null,""type"":[""null"",""string""]},{""name"":""birthCountry"",""doc"":""zeme narozeni"",""default"":null,""type"":[""null"",""string""]},{""name"":""birthPlace"",""doc"":""misto (mesto) narozeni"",""default"":null,""type"":[""null"",""string""]},{""name"":""citizenships"",""default"":null,""type"":[""null"",{""type"":""array"",""items"":{""type"":""record"",""name"":""Citizenship"",""namespace"":""cz.csas.avroschemas.administeredpayment_processpayment.v03_01"",""fields"":[{""name"":""citizenship"",""doc"":""statni prislusnost / obcanstvi"",""type"":""string""}]}}]},{""name"":""degree"",""doc"":""Academic degree. (titul pred)"",""default"":null,""type"":[""null"",""string""]},{""name"":""email"",""doc"":""emailova adresa"",""default"":null,""type"":[""null"",""string""]},{""name"":""forename"",""doc"":""(krestni) jmeno"",""type"":""string""},{""name"":""gender"",""doc"":""pohlavi"",""default"":null,""type"":[""null"",""string""]},{""name"":""personalId"",""doc"":""Pro ceske obcany to je rodne cislo. Pro cizince cislo odvozene od datumu narozani (jak rc) a posledne 4 cislice jsou devitky. Proto cizinci narozeni v jednom dni je maji rovnake."",""type"":""string""},{""name"":""surname"",""doc"":""prijmeni"",""type"":""string""},{""name"":""taxResidency"",""default"":null,""type"":[""null"",""string""]}]}");
		/// <summary>
		/// Additional academic degree. (Titul za jmenem.)
		/// </summary>
		private string _additionalDegree;
		/// <summary>
		/// zeme narozeni
		/// </summary>
		private string _birthCountry;
		/// <summary>
		/// misto (mesto) narozeni
		/// </summary>
		private string _birthPlace;
		private IList<cz.csas.avroschemas.administeredpayment_processpayment.v03_01.Citizenship> _citizenships;
		/// <summary>
		/// Academic degree. (titul pred)
		/// </summary>
		private string _degree;
		/// <summary>
		/// emailova adresa
		/// </summary>
		private string _email;
		/// <summary>
		/// (krestni) jmeno
		/// </summary>
		private string _forename;
		/// <summary>
		/// pohlavi
		/// </summary>
		private string _gender;
		/// <summary>
		/// Pro ceske obcany to je rodne cislo. Pro cizince cislo odvozene od datumu narozani (jak rc) a posledne 4 cislice jsou devitky. Proto cizinci narozeni v jednom dni je maji rovnake.
		/// </summary>
		private string _personalId;
		/// <summary>
		/// prijmeni
		/// </summary>
		private string _surname;
		private string _taxResidency;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return Person._SCHEMA;
			}
		}
		/// <summary>
		/// Additional academic degree. (Titul za jmenem.)
		/// </summary>
		public string additionalDegree
		{
			get
			{
				return this._additionalDegree;
			}
			set
			{
				this._additionalDegree = value;
			}
		}
		/// <summary>
		/// zeme narozeni
		/// </summary>
		public string birthCountry
		{
			get
			{
				return this._birthCountry;
			}
			set
			{
				this._birthCountry = value;
			}
		}
		/// <summary>
		/// misto (mesto) narozeni
		/// </summary>
		public string birthPlace
		{
			get
			{
				return this._birthPlace;
			}
			set
			{
				this._birthPlace = value;
			}
		}
		public IList<cz.csas.avroschemas.administeredpayment_processpayment.v03_01.Citizenship> citizenships
		{
			get
			{
				return this._citizenships;
			}
			set
			{
				this._citizenships = value;
			}
		}
		/// <summary>
		/// Academic degree. (titul pred)
		/// </summary>
		public string degree
		{
			get
			{
				return this._degree;
			}
			set
			{
				this._degree = value;
			}
		}
		/// <summary>
		/// emailova adresa
		/// </summary>
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				this._email = value;
			}
		}
		/// <summary>
		/// (krestni) jmeno
		/// </summary>
		public string forename
		{
			get
			{
				return this._forename;
			}
			set
			{
				this._forename = value;
			}
		}
		/// <summary>
		/// pohlavi
		/// </summary>
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				this._gender = value;
			}
		}
		/// <summary>
		/// Pro ceske obcany to je rodne cislo. Pro cizince cislo odvozene od datumu narozani (jak rc) a posledne 4 cislice jsou devitky. Proto cizinci narozeni v jednom dni je maji rovnake.
		/// </summary>
		public string personalId
		{
			get
			{
				return this._personalId;
			}
			set
			{
				this._personalId = value;
			}
		}
		/// <summary>
		/// prijmeni
		/// </summary>
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				this._surname = value;
			}
		}
		public string taxResidency
		{
			get
			{
				return this._taxResidency;
			}
			set
			{
				this._taxResidency = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.additionalDegree;
			case 1: return this.birthCountry;
			case 2: return this.birthPlace;
			case 3: return this.citizenships;
			case 4: return this.degree;
			case 5: return this.email;
			case 6: return this.forename;
			case 7: return this.gender;
			case 8: return this.personalId;
			case 9: return this.surname;
			case 10: return this.taxResidency;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.additionalDegree = (System.String)fieldValue; break;
			case 1: this.birthCountry = (System.String)fieldValue; break;
			case 2: this.birthPlace = (System.String)fieldValue; break;
			case 3: this.citizenships = (IList<cz.csas.avroschemas.administeredpayment_processpayment.v03_01.Citizenship>)fieldValue; break;
			case 4: this.degree = (System.String)fieldValue; break;
			case 5: this.email = (System.String)fieldValue; break;
			case 6: this.forename = (System.String)fieldValue; break;
			case 7: this.gender = (System.String)fieldValue; break;
			case 8: this.personalId = (System.String)fieldValue; break;
			case 9: this.surname = (System.String)fieldValue; break;
			case 10: this.taxResidency = (System.String)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
